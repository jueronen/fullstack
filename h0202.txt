const myFunctionWithCallback = (p1, p2, callback) => {
  return callback(p1, p2)
}

const myFunc = (p1, p2) => `Pitsa ${p1} ja ${p2}`
const result = myFunctionWithCallback('kinkulla', 'juustolla', myFunc)
console.log(result)


Rivillä 1 luodaan anonyymi callback nuolifunktio, joka annetaan vakiolle myFunctionWithCallback.
Funktio ottaa vastaan parametrina p1, p2 ja callback-funktion ja palauttaa kutsun callback-funktiolle ja
antaa sille parametrina anonyymifunktiolle välitetyt parametrit p1 ja p2.

Rivillä 5 anonyymi callback nuolifunktio, joka annetaan vakiolle myFunc. Funktio palauttaa tulostuksen
template stringinä: `Pitsa p1-argumentin ja p2-argumentin`.

Rivillä 6 vakioon result sijoitetaan myFunctionWithCallback -funktio, jonka mukana välitetään argumentteina
p1:seen merkkijono 'kinkulla', p2:seen merkkijono 'juustolla' sekä myFunc-funktio)

Rivillä 7 console logataan result, joka on rivillä 6 luotu vakio ja johon sijoitettu yo funktio. Eli
console loggaus result kutsuu myFunctionWithCallback -callback funktioo, jossa on välitetään argumentteina
p1:seen merkkijono 'kinkulla', p2:seen merkkijono 'juustolla' sekä myFunc-funktio, jota myFunctionWithCallback
kutsuu funktion sisältä ja palauttaa tämän myFunc-funktio palautuksen välitetyillä argumenteilla.

Tällöin tulostus on 'Pitsa kinkulla ja juustolla'. 